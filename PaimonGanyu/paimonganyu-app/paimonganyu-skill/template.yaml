AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  paimonganyu-skill

  SAM Template for paimonganyu-skill (KakaoTalk Chatbot Skill Server)

Parameters:
  Env:
    Type: String
    Default: test
    AllowedValues:
      - test
      - prod
    Description: The enviroment type of this deployment.

Conditions:
  CreateProd: !Equals [!Ref Env, prod]

Mappings:
  EnvMap:
    HostedZone:
      prod: paimon.studio.
      test: test.paimon.studio.
    ApiDomain:
      prod: skill.paimon.studio
      test: skill.test.paimon.studio
    GithubConnection:
      prod: arn:aws:apprunner:ap-northeast-1:305992497901:connection/PaimonGanyuSkill/3387a586946a4b35896f9e4d585bc05d
      test: arn:aws:apprunner:ap-northeast-1:254804608366:connection/PaimonGanyuSkill/34d79820235646aa92f43d7e18a63f08

  RegionEnvMap:
    ap-northeast-2:
      prod: SeoulProd
      test: SeoulTest
    ap-northeast-1:
      prod: TokyoProd
      test: TokyoTest
    CACert:
      SeoulProd: arn:aws:acm:ap-northeast-2:305992497901:certificate/9023abac-1279-4647-8056-ec5be058af4c
      SeoulTest: arn:aws:acm:ap-northeast-2:254804608366:certificate/3ee23337-94cb-47ba-9ce4-b91c0b71ac1b
      TokyoProd: arn:aws:acm:ap-northeast-1:305992497901:certificate/eb2ba354-e8c3-49ec-836d-5003be9c0da7

Resources:
  # paimonganyu-skill
#  IKakaoSkillConnectorSG:
#    Type: AWS::EC2::SecurityGroup
#    Properties:
#      GroupDescription: 'Enable access from iKakao skill connectors'
#      SecurityGroupIngress:
#        - IpProtocol: tcp
#          FromPort: 443
#          ToPort: 443
#          CidrIp: 219.249.231.40/30
#        - IpProtocol: tcp
#          FromPort: 80
#          ToPort: 80
#          CidrIp: 219.249.231.40/30
#
#  DeveloperSG:
#    Type: AWS::EC2::SecurityGroup
#    Properties:
#      GroupDescription: 'Enable access from developer PC'
#      SecurityGroupIngress:
#        - IpProtocol: tcp
#          FromPort: 443
#          ToPort: 443
#          CidrIp: 182.216.211.35/32
#        - IpProtocol: tcp
#          FromPort: 80
#          ToPort: 80
#          CidrIp: 182.216.211.35/32
#        - IpProtocol: tcp
#          FromPort: 22
#          ToPort: 22
#          CidrIp: 182.216.211.35/32

  PaimonGanyuSkillSerivce:
    Type: AWS::AppRunner::Service
    Properties:
      ServiceName: PaimonGanyuSkill
      SourceConfiguration:
        CodeRepository:
          RepositoryUrl: "https://github.com/binchoo/PaimonGanyu"
          SourceCodeVersion:
            Type: BRANCH
            Value: apprunner
          CodeConfiguration:
            ConfigurationSource: REPOSITORY
        AuthenticationConfiguration:
          ConnectionArn: !FindInMap [EnvMap, GithubConnection, !Ref Env]
        InstanceConfiguration:
          Cpu: "1 vCPU"
          Memory: "2 GB"
          InstanceRoleArn: !Ref PaimonGanyuSkillRole
        HealthCheckConfiguration:
          Path: "/health"
          Protocol: HTTP
          Interval: 30
          Timeout: 6
          UnhealthyThreshold: 3

  PaimonGanyuSkillRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess

  ApiRecordSet:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !FindInMap [EnvMap, HostedZone, !Ref Env]
      Comment: Zone apex alias targeted to ALB of PaimoGanyu Skill API
      RecordSets:
        - Name: !FindInMap [EnvMap, ApiDomain, !Ref Env]
          Type: !If [CreateALB, CNAME, A]
          TTL: 300
          ResourceRecords:
            - !GetAtt PaimonGanyuSkillSerivce.ServiceUrl
